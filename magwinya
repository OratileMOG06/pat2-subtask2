#include <iostream>
#include <string>
using namespace std;

const int MAX_ORDERS = 50;

int main() {
    // Arrays
    string orderIDs[MAX_ORDERS] = {
        "101","102","103","104","105","106","107","108","109","110"
    };
    string customerNames[MAX_ORDERS] = {
        "Thabo","Lerato","Nomvula","Sipho","Bongani",
        "Lindiwe","Jabulani","Ayanda","Kgosi","Refilwe"
    };
    int numMagwinyas[MAX_ORDERS] = {3,5,2,4,6,1,3,2,6,4};
    float orderTotals[MAX_ORDERS] = {15.75,30.50,10.00,22.00,40.25,5.50,18.00,12.75,28.00,24.50};

    // Fill remaining slots with "0"
    for(int i=10; i<MAX_ORDERS; i++) {
        orderIDs[i] = "0";
        customerNames[i] = "0";
        numMagwinyas[i] = 0;
        orderTotals[i] = 0.0;
    }

    int choice;
    int orderCount = 10;  // we already have 10 initialized

    do {
        cout << "\n=== Order Management Menu ===\n";
        cout << "1. Add new order\n";
        cout << "2. Display all orders\n";
        cout << "3. Find order by ID\n";
        cout << "4. Calculate total revenue\n";
        cout << "5. Exit\n";
        cout << "Enter choice: ";
        cin >> choice;

        if(choice == 1) {
            if(orderCount >= MAX_ORDERS) {
                cout << "Error: Maximum orders reached (50).\n";
            } else {
                string name;
                int qty;
                float pricePerMagwinya = 5.25; // assume fixed price

                cout << "Enter customer name: ";
                cin >> name;
                cout << "Enter number of Magwinyas: ";
                cin >> qty;

                // Assign next Order ID (last ID + 1)
                int newID = stoi(orderIDs[orderCount-1]) + 1;
                orderIDs[orderCount] = to_string(newID);
                customerNames[orderCount] = name;
                numMagwinyas[orderCount] = qty;
                orderTotals[orderCount] = qty * pricePerMagwinya;

                cout << "Order added successfully. Order ID: " << orderIDs[orderCount] << endl;
                orderCount++;
            }
        }
        else if(choice == 2) {
            cout << "\n--- All Orders ---\n";
            for(int i=0; i<orderCount; i++) {
                cout << orderIDs[i] << " | " << customerNames[i]
                     << " | " << numMagwinyas[i]
                     << " | R" << orderTotals[i] << endl;
            }
        }
        else if(choice == 3) {
            string searchID;
            cout << "Enter Order ID to find: ";
            cin >> searchID;
            bool found = false;

            for(int i=0; i<orderCount; i++) {
                if(orderIDs[i] == searchID) {
                    cout << "Order found: " << orderIDs[i] << " | "
                         << customerNames[i] << " | "
                         << numMagwinyas[i] << " | R"
                         << orderTotals[i] << endl;
                    found = true;
                    break;
                }
            }
            if(!found) cout << "Order ID not found.\n";
        }
        else if(choice == 4) {
            float totalRevenue = 0;
            for(int i=0; i<orderCount; i++) {
                totalRevenue += orderTotals[i];
            }
            cout << "Total Revenue = R" << totalRevenue << endl;
        }
        else if(choice == 5) {
            cout << "Exiting program...\n";
        }
        else {
            cout << "Invalid choice. Try again.\n";
        }

    } while(choice != 5);

    return 0;
}
